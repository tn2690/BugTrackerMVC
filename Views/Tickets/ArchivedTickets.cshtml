@model IEnumerable<BugTrackerMVC.Models.Ticket>
@using BugTrackerMVC.Models.Enums
@using Microsoft.AspNetCore.Identity
@inject UserManager<BTUser> _UserManager

@{
    ViewData["Title"] = "Archived Tickets";
    string btUser = _UserManager.GetUserId(User);
}

<!-- Archived Tickets -->

<!-- DataTable -->
<link rel="stylesheet" href="~/vendors/dataTable/datatables.min.css" type="text/css">

<div class="page-header">
    <div>
        <h3>Archived Tickets</h3>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a asp-action="Dashboard" asp-controller="Home">Home</a>
                </li>
                <li class="breadcrumb-item">
                    <a>Tickets</a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">Archived Tickets</li>
            </ol>
        </nav>
    </div>
</div>

<div class="row">
    <div class="col-md-12">

        <div class="card">
            <div class="card-body">
                <p>
                    <a asp-action="Create" class="btn btn-outline-primary rounded-pill">Create New</a>
                </p>

                <table id="archivedTicketsTable" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Title)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Description)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Project)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Created)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Updated)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.TicketStatus)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.TicketPriority)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.TicketType)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Title)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Description)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Project!.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Created)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Updated)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TicketStatus!.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TicketPriority!.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TicketType!.Name)
                                </td>
                                <td>
                                    @* Admin, submitter or developer of ticket can see Edit button *@
                                    @if (User.IsInRole(nameof(BTRoles.Admin)) || (item.SubmitterUserId == btUser || item.DeveloperUserId == btUser))
                                    {
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-primary rounded-pill mx-2">Edit</a>
                                    }
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-primary rounded-pill mx-2">Details</a>
                                    @* show Archive button if ticket is not archived *@
                                    @if (User.IsInRole(nameof(BTRoles.Admin)))
                                    {
                                        @if (item.Archived == false && item.ArchivedByProject == false)
                                        {
                                            <a asp-action="Archive" asp-route-id="@item.Id" class="btn btn-outline-danger rounded-pill mx-2">Archive</a>
                                        }
                                        @* Restore button if ticket is archived *@
                                        else
                                        {
                                            <a asp-action="Restore" asp-route-id="@item.Id" class="btn btn-outline-success rounded-pill mx-2">Restore</a>
                                        }
                                    }
                                    @if (item.DeveloperUserId is null && (User.IsInRole(nameof(BTRoles.ProjectManager)) || User.IsInRole(nameof(BTRoles.Admin))))
                                    {
                                        <a class="btn btn-outline-info rounded-pill mx-2" asp-action="AssignDeveloper" asp-route-id="@item.Id">Assign Developer</a>
                                    }
                                    else
                                    {
                                        @if (User.IsInRole(nameof(BTRoles.Admin)) || User.IsInRole(nameof(BTRoles.ProjectManager)))
                                        {
                                            <a class="btn btn-outline-secondary rounded-pill mx-2" asp-action="AssignDeveloper" asp-route-id="@item.Id">@(item.DeveloperUser?.FullName ?? "Unassigned")</a>
                                        }
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

    </div>
</div>

@section scripts {

    <!-- DataTable -->
    <script src="~/vendors/dataTable/datatables.min.js"></script>
    <script src="~/assets/js/examples/datatable.js"></script>

    <script>
        $('#archivedTicketsTable').DataTable({
            "scrollY": "500px",
            "scrollCollapse": true,
            responsive: true
        });

        $(document).ready(function () {
            $('#archivedTicketsTable').DataTable();
        });
    </script>

    <!-- Sweet Alerts -->
    <script>
        let message = '@(ViewBag.SwalMessage)';
        if (!message.includes("Error") && message != '') {
            Swal.fire({
                backdrop: false,
                icon: 'success',
                title: message,
                showConfirmButton: true
            })
        } else if (message.includes("Error")) {
            Swal.fire({
                backdrop: false,
                icon: 'error',
                title: 'Oops...',
                text: message
            })
        }
    </script>
}
